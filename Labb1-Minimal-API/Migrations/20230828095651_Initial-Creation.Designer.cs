// <auto-generated />
using System;
using Labb1_Minimal_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb1_Minimal_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230828095651_Initial-Creation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb1_Minimal_API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvalible")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Released")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Filip",
                            Description = "Horror book based on teenagers getting lost in the deep forest.",
                            Genre = "Horror",
                            IsAvalible = true,
                            Released = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Night"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Anas",
                            Description = "Fighting for survival, one man standing.",
                            Genre = "Thriller",
                            IsAvalible = false,
                            Released = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hungergames"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Ulrika",
                            Description = "Island Zoo full of dinosours, but things get out of hand.",
                            Genre = "Action",
                            IsAvalible = true,
                            Released = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Urasic Park"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Isabella",
                            Description = "Explorer tries to get rid off big white shark that is causing problems for residents.",
                            Genre = "Horror",
                            IsAvalible = true,
                            Released = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Meg"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Joakim",
                            Description = "The good verses the evel fight over the galaxy.",
                            Genre = "Science fiction",
                            IsAvalible = true,
                            Released = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Star Wars"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
